name: build-release-deploy
on:
  push:
    branches:
      - staging

jobs:
  build-release-1:
    name: Build & Release for Region 1
    uses: mailprotector/workflows/.github/workflows/docker-build-ecr.yml@main
    with:
      ECR_REPOSITORY: rspamd
      AWS_ACCESS_KEY_ID: ${{ secrets.STAGING_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.STAGING_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION_1 }}


#env:
#  APP_NAME: fluentbit
#  APP_ENV: staging
#  ECR_REPOSITORY: fluentbit
#  AWS_ACCOUNT_ID: ${{ secrets.STAGING_ACCOUNT_ID }}
#  AWS_ACCESS_KEY_ID: ${{ secrets.STAGING_ACCESS_KEY_ID }}
#  AWS_SECRET_ACCESS_KEY: ${{ secrets.STAGING_SECRET_ACCESS_KEY }}
#
#jobs:
#  # This job uses Buildx layer caching
#  build-release-1:
#    name: Build & Release Region 1
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Configure AWS credentials
#        id: config-aws
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ${{ secrets.AWS_REGION_1 }}
#
#      - name: Prepare
#        id: prep
#        run: |
#          TAG=$(echo $GITHUB_SHA | head -c7)
#          echo ::set-output name=tagged_image::${TAG}
#          echo ::set-output name=latest_image::latest
#          echo ::set-output name=tag::${TAG}
#
#      - name: Set up Docker Buildx
#        id: buildx
#        uses: docker/setup-buildx-action@master
#
#      - name: Login to Amazon ECR
#        id: login-ecr
#        uses: aws-actions/amazon-ecr-login@v1
#
#      - name: Cache Docker layers
#        uses: actions/cache@v2
#        with:
#          path: /tmp/.buildx-cache
#          key: ${{ runner.os }}-buildx-${{ github.sha }}
#          restore-keys: |
#            ${{ runner.os }}-buildx
#
#      - name: Build image
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          builder: ${{ steps.buildx.outputs.name }}
#          build-args: |
#            AWS_REGION=${{ secrets.AWS_REGION_1 }}
#          file: ./Dockerfile
#          push: false
#          load: true
#          tags: ${{ steps.prep.outputs.tagged_image }}
#          cache-from: type=local,src=/tmp/.buildx-cache
#          cache-to: type=local,dest=/tmp/.buildx-cache-new
#
#      - name: Tag and Push image to AWS ECR as SHA
#        env:
#          ECR_URL: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ steps.prep.outputs.tagged_image }}
#        run: |
#          docker tag ${{ steps.prep.outputs.tagged_image }} ${{ env.ECR_URL }}
#          docker push ${{ env.ECR_URL }}
#
#      - name: Tag and Push image to AWS ECR as latest
#        #if: github.ref == 'refs/heads/staging'
#        env:
#          ECR_URL: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ steps.prep.outputs.latest_image }}
#        run: |
#          docker tag ${{ steps.prep.outputs.tagged_image }} ${{ env.ECR_URL }}
#          docker push ${{ env.ECR_URL }}
#
#      - name: Move cache
#        run: |
#          rm -rf /tmp/.buildx-cache
#          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
#
#